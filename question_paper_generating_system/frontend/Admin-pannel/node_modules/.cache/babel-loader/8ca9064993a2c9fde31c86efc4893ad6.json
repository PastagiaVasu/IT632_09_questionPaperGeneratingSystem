{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar global = require('../internals/global');\n\nvar aCallable = require('../internals/a-callable');\n\nvar anObject = require('../internals/an-object');\n\nvar getSetIterator = require('../internals/get-set-iterator');\n\nvar iterate = require('../internals/iterate');\n\nvar TypeError = global.TypeError; // `Set.prototype.reduce` method\n// https://github.com/tc39/proposal-collection-methods\n\n$({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: true\n}, {\n  reduce: function reduce(callbackfn\n  /* , initialValue */\n  ) {\n    var set = anObject(this);\n    var iterator = getSetIterator(set);\n    var noInitial = arguments.length < 2;\n    var accumulator = noInitial ? undefined : arguments[1];\n    aCallable(callbackfn);\n    iterate(iterator, function (value) {\n      if (noInitial) {\n        noInitial = false;\n        accumulator = value;\n      } else {\n        accumulator = callbackfn(accumulator, value, value, set);\n      }\n    }, {\n      IS_ITERATOR: true\n    });\n    if (noInitial) throw TypeError('Reduce of empty set with no initial value');\n    return accumulator;\n  }\n});","map":{"version":3,"sources":["F:/DAIICT/SEM-2/Software Engerring/Project/frontend/Admin-pannel/node_modules/core-js/modules/esnext.set.reduce.js"],"names":["$","require","global","aCallable","anObject","getSetIterator","iterate","TypeError","target","proto","real","forced","reduce","callbackfn","set","iterator","noInitial","arguments","length","accumulator","undefined","value","IS_ITERATOR"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAII,cAAc,GAAGJ,OAAO,CAAC,+BAAD,CAA5B;;AACA,IAAIK,OAAO,GAAGL,OAAO,CAAC,sBAAD,CAArB;;AAEA,IAAIM,SAAS,GAAGL,MAAM,CAACK,SAAvB,C,CAEA;AACA;;AACAP,CAAC,CAAC;AAAEQ,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,KAAK,EAAE,IAAxB;AAA8BC,EAAAA,IAAI,EAAE,IAApC;AAA0CC,EAAAA,MAAM,EAAE;AAAlD,CAAD,EAA2D;AAC1DC,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC;AAAW;AAA3B,IAAiD;AACvD,QAAIC,GAAG,GAAGV,QAAQ,CAAC,IAAD,CAAlB;AACA,QAAIW,QAAQ,GAAGV,cAAc,CAACS,GAAD,CAA7B;AACA,QAAIE,SAAS,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnC;AACA,QAAIC,WAAW,GAAGH,SAAS,GAAGI,SAAH,GAAeH,SAAS,CAAC,CAAD,CAAnD;AACAd,IAAAA,SAAS,CAACU,UAAD,CAAT;AACAP,IAAAA,OAAO,CAACS,QAAD,EAAW,UAAUM,KAAV,EAAiB;AACjC,UAAIL,SAAJ,EAAe;AACbA,QAAAA,SAAS,GAAG,KAAZ;AACAG,QAAAA,WAAW,GAAGE,KAAd;AACD,OAHD,MAGO;AACLF,QAAAA,WAAW,GAAGN,UAAU,CAACM,WAAD,EAAcE,KAAd,EAAqBA,KAArB,EAA4BP,GAA5B,CAAxB;AACD;AACF,KAPM,EAOJ;AAAEQ,MAAAA,WAAW,EAAE;AAAf,KAPI,CAAP;AAQA,QAAIN,SAAJ,EAAe,MAAMT,SAAS,CAAC,2CAAD,CAAf;AACf,WAAOY,WAAP;AACD;AAjByD,CAA3D,CAAD","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar getSetIterator = require('../internals/get-set-iterator');\nvar iterate = require('../internals/iterate');\n\nvar TypeError = global.TypeError;\n\n// `Set.prototype.reduce` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Set', proto: true, real: true, forced: true }, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    var set = anObject(this);\n    var iterator = getSetIterator(set);\n    var noInitial = arguments.length < 2;\n    var accumulator = noInitial ? undefined : arguments[1];\n    aCallable(callbackfn);\n    iterate(iterator, function (value) {\n      if (noInitial) {\n        noInitial = false;\n        accumulator = value;\n      } else {\n        accumulator = callbackfn(accumulator, value, value, set);\n      }\n    }, { IS_ITERATOR: true });\n    if (noInitial) throw TypeError('Reduce of empty set with no initial value');\n    return accumulator;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}