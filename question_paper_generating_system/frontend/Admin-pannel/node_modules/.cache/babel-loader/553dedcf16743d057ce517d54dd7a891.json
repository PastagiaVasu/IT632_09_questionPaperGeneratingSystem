{"ast":null,"code":"var $ = require('../internals/export');\n\nvar global = require('../internals/global');\n\nvar apply = require('../internals/function-apply');\n\nvar getCompositeKeyNode = require('../internals/composite-key');\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar create = require('../internals/object-create');\n\nvar Object = global.Object;\n\nvar initializer = function () {\n  var freeze = getBuiltIn('Object', 'freeze');\n  return freeze ? freeze(create(null)) : create(null);\n}; // https://github.com/tc39/proposal-richer-keys/tree/master/compositeKey\n\n\n$({\n  global: true,\n  forced: true\n}, {\n  compositeKey: function compositeKey() {\n    return apply(getCompositeKeyNode, Object, arguments).get('object', initializer);\n  }\n});","map":{"version":3,"sources":["F:/DAIICT/SEM-2/Software Engerring/Project/frontend/Admin-pannel/node_modules/core-js/modules/esnext.composite-key.js"],"names":["$","require","global","apply","getCompositeKeyNode","getBuiltIn","create","Object","initializer","freeze","forced","compositeKey","arguments","get"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,6BAAD,CAAnB;;AACA,IAAIG,mBAAmB,GAAGH,OAAO,CAAC,4BAAD,CAAjC;;AACA,IAAII,UAAU,GAAGJ,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAIK,MAAM,GAAGL,OAAO,CAAC,4BAAD,CAApB;;AAEA,IAAIM,MAAM,GAAGL,MAAM,CAACK,MAApB;;AAEA,IAAIC,WAAW,GAAG,YAAY;AAC5B,MAAIC,MAAM,GAAGJ,UAAU,CAAC,QAAD,EAAW,QAAX,CAAvB;AACA,SAAOI,MAAM,GAAGA,MAAM,CAACH,MAAM,CAAC,IAAD,CAAP,CAAT,GAA0BA,MAAM,CAAC,IAAD,CAA7C;AACD,CAHD,C,CAKA;;;AACAN,CAAC,CAAC;AAAEE,EAAAA,MAAM,EAAE,IAAV;AAAgBQ,EAAAA,MAAM,EAAE;AAAxB,CAAD,EAAiC;AAChCC,EAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC,WAAOR,KAAK,CAACC,mBAAD,EAAsBG,MAAtB,EAA8BK,SAA9B,CAAL,CAA8CC,GAA9C,CAAkD,QAAlD,EAA4DL,WAA5D,CAAP;AACD;AAH+B,CAAjC,CAAD","sourcesContent":["var $ = require('../internals/export');\nvar global = require('../internals/global');\nvar apply = require('../internals/function-apply');\nvar getCompositeKeyNode = require('../internals/composite-key');\nvar getBuiltIn = require('../internals/get-built-in');\nvar create = require('../internals/object-create');\n\nvar Object = global.Object;\n\nvar initializer = function () {\n  var freeze = getBuiltIn('Object', 'freeze');\n  return freeze ? freeze(create(null)) : create(null);\n};\n\n// https://github.com/tc39/proposal-richer-keys/tree/master/compositeKey\n$({ global: true, forced: true }, {\n  compositeKey: function compositeKey() {\n    return apply(getCompositeKeyNode, Object, arguments).get('object', initializer);\n  }\n});\n"]},"metadata":{},"sourceType":"script"}