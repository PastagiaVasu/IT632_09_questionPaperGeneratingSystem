{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar anObject = require('../internals/an-object');\n\nvar getMapIterator = require('../internals/get-map-iterator');\n\nvar sameValueZero = require('../internals/same-value-zero');\n\nvar iterate = require('../internals/iterate'); // `Map.prototype.includes` method\n// https://github.com/tc39/proposal-collection-methods\n\n\n$({\n  target: 'Map',\n  proto: true,\n  real: true,\n  forced: true\n}, {\n  includes: function includes(searchElement) {\n    return iterate(getMapIterator(anObject(this)), function (key, value, stop) {\n      if (sameValueZero(value, searchElement)) return stop();\n    }, {\n      AS_ENTRIES: true,\n      IS_ITERATOR: true,\n      INTERRUPTED: true\n    }).stopped;\n  }\n});","map":{"version":3,"sources":["F:/DAIICT/SEM-2/Software Engerring/Project/frontend/Admin-pannel/node_modules/core-js/modules/esnext.map.includes.js"],"names":["$","require","anObject","getMapIterator","sameValueZero","iterate","target","proto","real","forced","includes","searchElement","key","value","stop","AS_ENTRIES","IS_ITERATOR","INTERRUPTED","stopped"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIE,cAAc,GAAGF,OAAO,CAAC,+BAAD,CAA5B;;AACA,IAAIG,aAAa,GAAGH,OAAO,CAAC,8BAAD,CAA3B;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,sBAAD,CAArB,C,CAEA;AACA;;;AACAD,CAAC,CAAC;AAAEM,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,KAAK,EAAE,IAAxB;AAA8BC,EAAAA,IAAI,EAAE,IAApC;AAA0CC,EAAAA,MAAM,EAAE;AAAlD,CAAD,EAA2D;AAC1DC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,aAAlB,EAAiC;AACzC,WAAON,OAAO,CAACF,cAAc,CAACD,QAAQ,CAAC,IAAD,CAAT,CAAf,EAAiC,UAAUU,GAAV,EAAeC,KAAf,EAAsBC,IAAtB,EAA4B;AACzE,UAAIV,aAAa,CAACS,KAAD,EAAQF,aAAR,CAAjB,EAAyC,OAAOG,IAAI,EAAX;AAC1C,KAFa,EAEX;AAAEC,MAAAA,UAAU,EAAE,IAAd;AAAoBC,MAAAA,WAAW,EAAE,IAAjC;AAAuCC,MAAAA,WAAW,EAAE;AAApD,KAFW,CAAP,CAEwDC,OAF/D;AAGD;AALyD,CAA3D,CAAD","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar anObject = require('../internals/an-object');\nvar getMapIterator = require('../internals/get-map-iterator');\nvar sameValueZero = require('../internals/same-value-zero');\nvar iterate = require('../internals/iterate');\n\n// `Map.prototype.includes` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: true }, {\n  includes: function includes(searchElement) {\n    return iterate(getMapIterator(anObject(this)), function (key, value, stop) {\n      if (sameValueZero(value, searchElement)) return stop();\n    }, { AS_ENTRIES: true, IS_ITERATOR: true, INTERRUPTED: true }).stopped;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}