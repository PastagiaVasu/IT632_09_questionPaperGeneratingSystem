{"ast":null,"code":"var $ = require('../internals/export');\n\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar isObject = require('../internals/is-object');\n\nvar hasOwn = require('../internals/has-own-property');\n\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\n\nvar getOwnPropertyNamesExternalModule = require('../internals/object-get-own-property-names-external');\n\nvar isExtensible = require('../internals/object-is-extensible');\n\nvar uid = require('../internals/uid');\n\nvar FREEZING = require('../internals/freezing');\n\nvar REQUIRED = false;\nvar METADATA = uid('meta');\nvar id = 0;\n\nvar setMetadata = function (it) {\n  defineProperty(it, METADATA, {\n    value: {\n      objectID: 'O' + id++,\n      // object ID\n      weakData: {} // weak collections IDs\n\n    }\n  });\n};\n\nvar fastKey = function (it, create) {\n  // return a primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n\n  if (!hasOwn(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F'; // not necessary to add metadata\n\n    if (!create) return 'E'; // add missing metadata\n\n    setMetadata(it); // return object ID\n  }\n\n  return it[METADATA].objectID;\n};\n\nvar getWeakData = function (it, create) {\n  if (!hasOwn(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true; // not necessary to add metadata\n\n    if (!create) return false; // add missing metadata\n\n    setMetadata(it); // return the store of weak collections IDs\n  }\n\n  return it[METADATA].weakData;\n}; // add metadata on freeze-family methods calling\n\n\nvar onFreeze = function (it) {\n  if (FREEZING && REQUIRED && isExtensible(it) && !hasOwn(it, METADATA)) setMetadata(it);\n  return it;\n};\n\nvar enable = function () {\n  meta.enable = function () {\n    /* empty */\n  };\n\n  REQUIRED = true;\n  var getOwnPropertyNames = getOwnPropertyNamesModule.f;\n  var splice = uncurryThis([].splice);\n  var test = {};\n  test[METADATA] = 1; // prevent exposing of metadata key\n\n  if (getOwnPropertyNames(test).length) {\n    getOwnPropertyNamesModule.f = function (it) {\n      var result = getOwnPropertyNames(it);\n\n      for (var i = 0, length = result.length; i < length; i++) {\n        if (result[i] === METADATA) {\n          splice(result, i, 1);\n          break;\n        }\n      }\n\n      return result;\n    };\n\n    $({\n      target: 'Object',\n      stat: true,\n      forced: true\n    }, {\n      getOwnPropertyNames: getOwnPropertyNamesExternalModule.f\n    });\n  }\n};\n\nvar meta = module.exports = {\n  enable: enable,\n  fastKey: fastKey,\n  getWeakData: getWeakData,\n  onFreeze: onFreeze\n};\nhiddenKeys[METADATA] = true;","map":{"version":3,"sources":["F:/DAIICT/SEM-2/Software Engerring/Project/frontend/Admin-pannel/node_modules/core-js/internals/internal-metadata.js"],"names":["$","require","uncurryThis","hiddenKeys","isObject","hasOwn","defineProperty","f","getOwnPropertyNamesModule","getOwnPropertyNamesExternalModule","isExtensible","uid","FREEZING","REQUIRED","METADATA","id","setMetadata","it","value","objectID","weakData","fastKey","create","getWeakData","onFreeze","enable","meta","getOwnPropertyNames","splice","test","length","result","i","target","stat","forced","module","exports"],"mappings":"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","sourcesContent":["var $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar isObject = require('../internals/is-object');\nvar hasOwn = require('../internals/has-own-property');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternalModule = require('../internals/object-get-own-property-names-external');\nvar isExtensible = require('../internals/object-is-extensible');\nvar uid = require('../internals/uid');\nvar FREEZING = require('../internals/freezing');\n\nvar REQUIRED = false;\nvar METADATA = uid('meta');\nvar id = 0;\n\nvar setMetadata = function (it) {\n  defineProperty(it, METADATA, { value: {\n    objectID: 'O' + id++, // object ID\n    weakData: {}          // weak collections IDs\n  } });\n};\n\nvar fastKey = function (it, create) {\n  // return a primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!hasOwn(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMetadata(it);\n  // return object ID\n  } return it[METADATA].objectID;\n};\n\nvar getWeakData = function (it, create) {\n  if (!hasOwn(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMetadata(it);\n  // return the store of weak collections IDs\n  } return it[METADATA].weakData;\n};\n\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZING && REQUIRED && isExtensible(it) && !hasOwn(it, METADATA)) setMetadata(it);\n  return it;\n};\n\nvar enable = function () {\n  meta.enable = function () { /* empty */ };\n  REQUIRED = true;\n  var getOwnPropertyNames = getOwnPropertyNamesModule.f;\n  var splice = uncurryThis([].splice);\n  var test = {};\n  test[METADATA] = 1;\n\n  // prevent exposing of metadata key\n  if (getOwnPropertyNames(test).length) {\n    getOwnPropertyNamesModule.f = function (it) {\n      var result = getOwnPropertyNames(it);\n      for (var i = 0, length = result.length; i < length; i++) {\n        if (result[i] === METADATA) {\n          splice(result, i, 1);\n          break;\n        }\n      } return result;\n    };\n\n    $({ target: 'Object', stat: true, forced: true }, {\n      getOwnPropertyNames: getOwnPropertyNamesExternalModule.f\n    });\n  }\n};\n\nvar meta = module.exports = {\n  enable: enable,\n  fastKey: fastKey,\n  getWeakData: getWeakData,\n  onFreeze: onFreeze\n};\n\nhiddenKeys[METADATA] = true;\n"]},"metadata":{},"sourceType":"script"}